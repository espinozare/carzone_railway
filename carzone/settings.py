"""
Django settings for carzone project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import dj_database_url
from decouple import config  # Import config for environment variable management
import os
import environ
env = environ.Env()
env.read_env()

ENVIRONMENT = env('ENVIRONMENT', default="production")

# Set to True for connecting to remote database from local environment 
POSTGRES_LOCALLY = False

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# For local development, you can set a default value or use a placeholder
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
if ENVIRONMENT == 'development':
    DEBUG = True 
else:
    DEBUG = False



ALLOWED_HOSTS = [
                'localhost', '127.0.0.1', 
                'web-npd1f3752jkq.up-de-fra1-k8s-1.apps.run-on-seenode.com/'
                ]

CSRF_TRUSTED_ORIGINS = [ 
                'https://web-npd1f3752jkq.up-de-fra1-k8s-1.apps.run-on-seenode.com/',
                ]

   




    

LOGIN_REDIRECT_URL = 'dashboard'  # Redirect to dashboard after login


# Application definition

INSTALLED_APPS = [
    
    'contacts.apps.ContactsConfig',
    'cars.apps.CarsConfig',
    'pages.apps.PagesConfig',
    'accounts.apps.AccountsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',  # Add this line to include the CKEditor app
    'django.contrib.humanize',  # Add this line to include the humanize app
    'django.contrib.sites',  # Add this line to include the sites app
    'allauth',  # Add this line to include the allauth app  
    'allauth.account',  # Add this line to include the allauth account app
    'allauth.socialaccount',  # Add this line to include the allauth social account app
    
    'allauth.socialaccount.providers.google',  # Add this line to include the Google provider for allauth
    'allauth.socialaccount.providers.facebook',  # Add this line to include the Facebook provider for allauth
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    
]

ROOT_URLCONF = 'carzone.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'carzone.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


if ENVIRONMENT == 'production' or POSTGRES_LOCALLY:
    DATABASES = {
        'default': dj_database_url.parse(config('DATABASE_URL'))
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'carzone_db',
            'USER': 'code2025',
            'PASSWORD': '12AtmosR',
            'HOST': 'localhost',
        }
    }











# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'carzone/static'),        
]

STATIC_ROOT = os.path.join(BASE_DIR, 'static_files')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files (User-uploaded files)
MEDIA_ROOT=os.path.join(BASE_DIR,'media')
MEDIA_URL='/media/'
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


# messages
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

SITE_ID = 1  # Add this line to set the site ID for allauth
# Authentication backends for allauth

# Email sending
EMAIL_HOST='smtp.gmail.com'
EMAIL_PORT=587
EMAIL_HOST_USER='har@gmail.com'
EMAIL_HOST_PASSWORD='har1'
EMAIL_USE_TLS=True 

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


